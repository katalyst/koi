/**
  cross-browser flexbox mixins
*/
@mixin display-flex {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($value) {
  -webkit-box-flex: $value;
  -moz-box-flex: $value;
  -webkit-flex: $value;
  -ms-flex: $value;
  flex: $value;
}

@mixin flex-wrap($wrap: wrap) {
  -webkit-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

@mixin flex-grow($value) {
  -webkit-flex-grow: $value;
  -ms-flex-positive: $value;
  flex-grow: $value;
}

@mixin flex-shrink($value) {
  -webkit-flex-shrink: $value;
  -ms-flex-negative: $value;
  flex-shrink: $value;
}

@mixin flex-basis($value) {
  -webkit-flex-basis: $value;
  flex-basis: $value;
}

@mixin align-items($value) {
  -webkit-align-items: $value;
  -ms-flex-align: $value;
  align-items: $value;
}

@mixin justify-items($value) {
  -webkit-justify-items: $value;
  justify-items: $value;
}

@mixin align-content($value) {
  -webkit-align-content: $value;
  align-content: $value;
}

@mixin flex-static {
  @include flex-grow(0);
  @include flex-shrink(0);
}

@mixin flex-fluid {
  @include flex-shrink(1);
  @include flex-grow(1);
}

@mixin justify-content($value) {
  -moz-box-pack: $value;
  -ms-flex-pack: $value;
  -webkit-justify-content: $value;
  justify-content: $value;
}

@mixin align-self($value) {
  -webkit-align-self: $value;
  align-self: $value;
}

@mixin justify-self($value) {
  -webkit-justify-self: $value;
  justify-self: $value;
}

@mixin order($value) {
  -webkit-box-ordinal-group: $value;
  -moz-box-ordinal-group: $value;
  -ms-flex-order: $value;
  -webkit-order: $value;
  order: $value;
}

/**

  @flex-row

  Creates a wrapper for your columns with a custom gutter:
  @include flex-row(10px);

*/
@mixin flex-row($gutter: false) {
  @include display-flex;
  @include flex-wrap;
  @if $gutter {
    margin: $gutter * -0.5;
  }
}

/**

  @flex-col

  Crates a column with a specified gutter and width

  1.  To create a column 50% wide with a 10px gutter:
      @include flex-col(50%, 10px);

  2.  To create a column 50% wide that responds to 100% wide:
      @include flex-col(50%, 10px);
      @include media-query(800px) {
        @include flex-col(50%);
      }

*/
@mixin flex-col($width, $gutter: false, $grow: 0, $shrink: 0) {
  @if $gutter {
    padding: $gutter * 0.5;
  }
  @include flex-grow($grow);
  @include flex-shrink($shrink);
  @include flex-basis(auto);
  width: $width;
}

/**

  @flex-fallback-floats

  floats all things to the left
  pass in $clear-on to clear every x element

  eg. four column tiles should use: 
  @include flex-fallback-floats(4);

*/
@mixin flex-fallback-floats($clear-on: false) {
  // Deprecated
}

/**
  
  @flex-fallback-table

  turns element in to a table and the children
  in to a table-cell

*/
@mixin flex-fallback-table {
  // Deprecated
}
