<% content_for :head do %>

  <!-- Replace the standard HTML for with Plupload. -->
  <script type="text/javascript">
    $ (function () {

      function truncate (string) {
        return string.length < 20 ? string : string.substr (0, 20)+"&hellip;";
      }

      var $form             = $ ("#upload-form");
      var $fileList         = $ ('#upload-files');
      var $buttonUpload     = $ ('#upload-button-upload');
      var $tagFieldContents = $ ("#tag-field *");
      var $tagInput         = $tagFieldContents.filter ("input").first ();
      var uploader;

      // Prepare the DOM.
      $tagFieldContents.show ();
//      $form.append ('<h6>Files</h6>', $fileList, $tagFieldContents);

      // Init the uploader.
      uploader = new plupload.Uploader ({
        runtimes       : 'html5,flash'
      , url            : jsData.createAssetUrl
      , max_file_size  : '10mb'
      , unique_names   : false
      , browse_button  : 'upload-button-browse'
      , container      : 'upload-form'
      , flash_swf_url  : '/assets/moxiecode/plupload.swf'
      , filters        : [ { title: "Assets", extensions: '*' } ]
      });
      uploader.init ();

      // Hijack the upload button.
      $buttonUpload.closest ('form').submit (function (e)
      {
        uploader.start ();
        e.preventDefault ();
        return false;
      });

      // Handle the 'files added' event.
      uploader.bind ('FilesAdded', function (up, files) {
        $buttonUpload
          .removeClass ('disabled')
          .find ('input')
            .attr ("disabled", null);

        $.each (files, function (i, file) {
          $fileList.append (
            '<div id="' + file.id + '" class="bold space-b-3px">' +
              truncate (file.name) +
              ' ' +
              '(' + plupload.formatSize (file.size) + ')' +
              '<b></b>' +
            '</div>'
          );
        });
        up.refresh (); // Reposition Flash
      });

      // TODO: Handle the 'files removed' event.

      // Handle the 'upload file' event.
      uploader.bind ('BeforeUpload', function (up, file) {
        up.settings.multipart_params = {
          tag_list: $('textarea.tagify').tagify('serialize')
        };
      });

      uploader.bind ('UploadProgress', function (up, file) {
        $ ('#' + file.id + " b").html (file.percent + "%");
      });

      uploader.bind ('Error', function (up, err) {
        $filelist.append ("<div>Error: " + err.code +
          ", Message: " + err.message +
          (err.file ? ", File: " + err.file.name : "") +
          "</div>"
        );
        up.refresh (); // Reposition Flash
      });

      uploader.bind ('FileUploaded', function (up, file, response) {
        // Called when a file has finished uploading
        $ ('#' + file.id + " b").html ("100%");
        // ajax server response
        // $ ('.asset-list ul').prepend (response.response);
        if (up.total.uploaded == up.files.length) {
          $fileList.empty ();
          location.reload ();
        }
      });

    });
  </script>
<% end %>
