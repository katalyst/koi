 <%
  attr          = object.key
  klass         = object.class
  value         = object.file
  is_nil_or_new = (value.blank? || object.new_record?)
  kind          = :file
  html_id       = new_uuid
  remove        = "remove_#{attr}"

  # maximum amount of files uploaded to this field
  max_count ||= "1"

  # max file size of each file
  max_size ||= "5"

  # allowed file types
  types ||= "jpg,jpeg,gif"

  # over-rideable html class for input file and dropzone
  html_class ||= "file-upload"

  # if there's an existing image
  if is_nil_or_new
    existing_image = ""
  else
    existing_image = object.send(attr).url
  end

%>

<div class="input file optional control-group kat-upload <%= attr -%>">

  <%= f.label(attr) -%>  
  <div class="form--file-upload--hint-position">
    <%= f.hint(attr) -%>
  </div>
  <%= f.error(attr) -%>

  <div class="form--file-upload--fallback controls">

    <p class="help-block">
      <%- if max_size -%>
        Max file size: <%= max_size -%>mb<br />
      <%- end -%>
      <%- if types -%>
        File types allowed: <%= types -%><br />
      <%- end -%>
      <%- if max_count.to_i > 1 -%>
        Maximum number of files: <%= max_count -%><br />
      <%- end -%>
    </p>

    <% if !is_nil_or_new %>
      <%= image_tag resource.send(attr).thumb('100x').url, :class => 'form--file-upload--fallback-image imgfix left space-r-1' %>
    <% end %>

  </div>

  <div class="form--file-upload">
    <div>
      <%= f.file_field(attr, class: html_class, data: {file_max_count: max_count, file_max_size: max_size, file_types: types, file_existing_image: existing_image, field: "hidden_for_#{attr}" }) %>
    </div>
  </div>

</div>

<!-- kept in case any of the above doesn't work for settings -->
<!--
<%= f.label(label) %>

<div class="media">
  <% if !is_nil_or_new %>
    <%= attachment_image_tag(value, class: "media-object pull-left") %>
  <% else %>
    <%= placeholder_image_tag("No File", size: "100x100", class: "media-object pull-left") %>
  <% end %>
  <div class="media-body">
    <% unless is_nil_or_new %>
      <p><%= link_to "View #{kind}", value.url, :target => "_blank" %></p>
    <% end %>

      <%= fields_for "setting[setting[#{object.id}]]" do |setting| %>
        <div class="controls">
        <% if !is_nil_or_new %>
            <label class="radio"><%= setting.radio_button :remove_file, false, checked: !is_nil_or_new %> Keep this <%= kind %></label>
            <label class="radio"><%= setting.radio_button :remove_file, true %> Remove this <%= kind %></label>
        <% end %>

        <label class="radio"><%= setting.radio_button :remove_file, false, checked: is_nil_or_new, id: html_id %> Upload a new <%= kind %></label>

        <%= setting.file_field :file, label: false, onclick: "document.getElementById('#{html_id}').click()" %>
      <% end %>

    </div>
  </div>
</div>
-->