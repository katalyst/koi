//= require bootstrap-wysihtml5-all

<% url = Koi::Engine.routes.url_helpers %>

! function ($, wysihtml5)
{
  "use strict"

  /* override */
  wysihtml5.commands.insertImage.exec = function (composer, command, value)
  {
    value = typeof (value) === 'object' ? value : { src: value };

    var doc     = composer.doc,
        image   = this.state (composer),
        textNode,
        i,
        parent;

    if (image) {
      // Image already selected, set the caret before it and delete it
      composer.selection.setBefore (image);
      parent = image.parentNode;
      parent.removeChild (image);

      // and it's parent <a> too if it hasn't got any other relevant child nodes
      wysihtml5.dom.removeEmptyTextNodes (parent);
      if (parent.nodeName === "A" && !parent.firstChild) {
        composer.selection.setAfter (parent);
        parent.parentNode.removeChild (parent);
      }

      // firefox and ie sometimes don't remove the image handles, even though the image got removed
      wysihtml5.quirks.redraw (composer.element);
      return;
    }

    image = doc.createElement ('IMG'); /* only because NODE_NAME doesn't exist in our extension */

    for (i in value) $ (image).attr (i, value[i]); /* set attributs with jQuery so we can accomodate `style` */

    composer.selection.insertNode (image);
    if (wysihtml5.browser.hasProblemsSettingCaretAfterImg ()) {
      textNode = doc.createTextNode (wysihtml5.INVISIBLE_SPACE);
      composer.selection.insertNode (textNode);
      composer.selection.setAfter (textNode);
    } else {
      composer.selection.setAfter (image);
    }    
  }

  window.assetManager = new Object; // somewhere for the AM callbacks to go...

  window.assetManager.close = function ()
  {
    $ ('#modal-for-asset-manager').modal ('hide');
  }

  var templates = {
    
    "font-styles":
      "<li class='dropdown'>"
    +   "<a class='btn dropdown-toggle' data-toggle='dropdown' href='#'>"
    +     "<i class='icon-font'></i>&nbsp;<span class='current-font'>p</span>&nbsp;<b class='caret'></b>"
    +   "</a>"
    +   "<ul class='dropdown-menu'>"
    +     "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='div'>p</a></li>"
    +     "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h1'>h1</a></li>"
    +     "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h2'>h2</a></li>"
    +   "</ul>"
    + "</li>",
    
    "emphasis":
      "<li>"
    +   "<div class='btn-group'>" 
    +     "<a class='btn' data-wysihtml5-command='bold' title='CTRL+B'>b</a>" 
    +     "<a class='btn' data-wysihtml5-command='italic' title='CTRL+I'>i</a>" 
    +     "<a class='btn' data-wysihtml5-command='underline' title='CTRL+U'>u</a>" 
    +   "</div>" 
    + "</li>",
    
    "lists": 
      "<li>" 
    +   "<div class='btn-group'>" 
    +     "<a class='btn' data-wysihtml5-command='insertUnorderedList' title='Unordered List'><i class='icon-list'></i></a>" 
    +     "<a class='btn' data-wysihtml5-command='insertOrderedList' title='Ordered List'><i class='icon-th-list'></i></a>" 
    +     "<a class='btn' data-wysihtml5-command='Outdent' title='Outdent'><i class='icon-indent-right'></i></a>"                   
    +     "<a class='btn' data-wysihtml5-command='Indent' title='Indent'><i class='icon-indent-left'></i></a>" 
    +   "</div>" 
    + "</li>",

    "link":
      "<li>"             
    +   "<div class='bootstrap-wysihtml5-insert-link-modal modal hide fade'>"
    +     "<div class='modal-header'>"
    +       "<a class='close' data-dismiss='modal'>&times;</a>"
    +       "<h3>Insert Link</h3>"
    +     "</div>"
    +     "<div class='modal-body'>"
    +       "<input value='http://' class='bootstrap-wysihtml5-insert-link-url input-xlarge'>"
    +     "</div>"
    +     "<div class='modal-footer'>"
    +       "<a href='#' class='btn close' data-dismiss='modal'>Cancel</a>"
    +       "<a href='#' class='space-r-1 btn btn-primary' data-dismiss='modal'>Insert link</a>"
    +     "</div>"
    +   "</div>"
    +   "<a class='btn' data-wysihtml5-command='createLink' title='Link'><i class='icon-share'></i></a>" 
    + "</li>",

    "assets":
      "<li>" 
    +   "<div class='btn-group'>"        
    +     "<a class='btn' data-wysihtml5-command='insertImage' title='Insert image'><i class='icon-picture'></i></a>" 
    +     "<a class='btn' data-wysihtml5-command='insertDocument' title='Insert document'><i class='icon-file'></i></a>" 
    +   "</div>"
    + "</li>",

    "html": 
      "<li>"
    +   "<div class='btn-group'>"
    +     "<a class='btn' data-wysihtml5-action='change_view' title='Edit HTML'><i class='icon-pencil'></i></a>" 
    +   "</div>"
    + "</li>"
  };
  
  var defaultOptions = {
    
    "font-styles": true,
    "emphasis": true,
    "lists": true,
    "link": true,
    "assets": true,
    "html": true,
    
    events: {},
    
    parserRules:
    {
      tags:
      {
        "b": {},
        "i": {},
        "br": {},
        "ol": {},
        "ul": {},
        "li": {},
        "h1": {},
        "h2": {},
        "u": 1,
        
        "img":
        {
          "check_attributes":
          {
            "width": "numbers",
            "alt": "alt",
            "src": "url",
            "height": "numbers"
          }
        },
        
        "a":
        {
          set_attributes:
          {
            target: "_blank",
            rel:    "nofollow"
          },
          check_attributes:
          {
            href:   "url" // important to avoid XSS
          }
        }
      }
    }
  };

  var Wysihtml5 = function (el, options)
  {
    this.el = el;
    this.toolbar = this.createToolbar (el, options || defaultOptions);
    this.editor =  this.createEditor (options);
    
    window.editor = this.editor;

    $ ('iframe.wysihtml5-sandbox').each (function (i, el)
    {
      $ (el.contentWindow)
      .off ('focus.wysihtml5')
      .on ('focus.wysihtml5', function () { $ ('li.dropdown').removeClass ('open'); });
    });
  };

  Wysihtml5.prototype = {
    
    constructor: Wysihtml5,

    createEditor: function (options)
    {
      var parserRules = defaultOptions.parserRules; 

      if (options && options.parserRules) parserRules = options.parserRules;
        
      var editor = new wysihtml5.Editor (this.el.attr ('id'),
      {
        toolbar: this.toolbar.attr ('id'),
        parserRules: parserRules
      });

      if (options && options.events)
        for (var eventName in options.events) editor.on (eventName, options.events[eventName]);

      return editor;
    },
    
    createToolbar: function (el, options)
    {
      var self = this;
      var toolbar = $ ("<ul/>", {
        'id' : el.attr ('id') + "-wysihtml5-toolbar",
        'class' : "wysihtml5-toolbar",
        'style': "display:none"
      });

      for (var key in defaultOptions)
      {
        var value = false;
        
        if (options[key] != undefined)
        {
          if (options[key] == true) value = true;
        }
        else
        {
          value = defaultOptions[key];
        }
        
        if (value == true)
        {
          toolbar.append (templates[key]);

          if (key == "html") this.initHtml (toolbar);
          if (key == "link") this.initInsertLink (toolbar);
          if (key == "assets")
          {
            this.initInsertImage (toolbar);
            this.initInsertDocument (toolbar);
          }
        }
      }
      
      var self = this;
      
      toolbar.find ("a[data-wysihtml5-command='formatBlock']").click (function (e)
      {
        var el = $ (e.srcElement);
        self.toolbar.find ('.current-font').text (el.html ())
      });
      
      this.el.before (toolbar);
      
      return toolbar;
    },

    initHtml: function (toolbar)
    {
      var changeViewSelector = "a[data-wysihtml5-action='change_view']";
      toolbar.find (changeViewSelector).click (function (e)
      {
        toolbar.find ('a.btn').not (changeViewSelector).toggleClass ('disabled');
      });
    },

    initInsertDocument: function (toolbar)
    {
      var $this = this;
      var $button = toolbar.find ('a[data-wysihtml5-command=insertDocument]');

      $button.click (function ()
      {
        $ ('#modal-for-asset-manager').modal ('show').koiFrame ("<%= url.new_document_path %>");
        return false;
      });

      window.assetManager.insertDocument = function (arg)
      {
        var composer = $this.editor.composer;
        
        $ (composer.doc.getElementsByTagName ('body')).focus ();
        composer.commands.exec ('createLink', arg);
        
        window.assetManager.close ();
      }
    },

    initInsertImage: function (toolbar)
    {
      var $this = this;
      var $button = toolbar.find ('a[data-wysihtml5-command=insertImage]');

      $button.click (function ()
      {
        $ ('#modal-for-asset-manager').modal ('show').koiFrame ("<%= url.new_image_path %>");
        return false;
      });

      window.assetManager.insertImage = function (arg)
      {
        var composer = $this.editor.composer;
        
        $ (composer.doc.getElementsByTagName ('body')).focus ();
        composer.commands.exec ('insertImage', arg);
        
        window.assetManager.close ();
      }
    },

    initInsertLink: function (toolbar)
    {
      var self = this;
      var insertLinkModal = toolbar.find ('.bootstrap-wysihtml5-insert-link-modal');
      var urlInput = insertLinkModal.find ('.bootstrap-wysihtml5-insert-link-url');
      var insertButton = insertLinkModal.find ('a.btn-primary');
      var initialValue = urlInput.val ();

      var insertLink = function ()
      { 
        var url = urlInput.val ();
        urlInput.val (initialValue);
        self.editor.composer.commands.exec ("createLink",
        { 
          href: url, 
          target: "_blank", 
          rel: "nofollow" 
        });
      };
      var pressedEnter = false;

      urlInput.keypress (function (e)
      {
        if (e.which == 13)
        {
          insertLink ();
          insertLinkModal.modal ('hide');
        }
      });

      insertButton.click (insertLink);

      insertLinkModal.on ('shown', function () { urlInput.focus (); });
      insertLinkModal.on ('hide', function () { self.editor.currentView.element.focus (); });

      toolbar.find ('a[data-wysihtml5-command=createLink]').click (function ()
      {
        insertLinkModal.modal ('show');
        return false;
      });
    }
  };

  $.fn.koiEditor = function (options)
  {
    return this.each (function ()
    {
      var $this = $ (this);
      $this.data ('wysihtml5', new Wysihtml5 ($this, options));
    });
  }

  $.fn.wysihtml5.Constructor = Wysihtml5;

} (window.jQuery, window.wysihtml5);
