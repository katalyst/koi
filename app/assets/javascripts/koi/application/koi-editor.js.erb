//= require bootstrap-wysihtml5-all

<% url = Koi::Engine.routes.url_helpers %>

! function ($)
{

  $.fn.wysihtml5.Constructor.prototype.initInsertImage = function ($toolbar)
  {
    var $this = this;
    var $button = $toolbar.find ('a[data-wysihtml5-command=insertImage]');

    window.punk = $this;

    $button.click (function()
    {
      $ ('#modal-for-asset-manager').modal ('show').koiFrame ("<%= url.new_image_path %>");
      return false;
    });

    window.assetManager.insertImage = function (arg)
    {
      var composer = $this.editor.composer;
      
      $ (composer.doc.getElementsByTagName ('body')).focus ();
      composer.commands.exec ('insertImage', arg);
      
      window.assetManager.close ();
    }
  }

  window.assetManager = new Object; // somewhere for the AM callback to go...

  window.assetManager.close = function ()
  {
    $ ('#modal-for-asset-manager').modal ('hide');
  }

  wysihtml5.commands.insertImage.exec = function (composer, command, value)
  {
    value = typeof(value) === 'object' ? value : { src: value };

    var doc     = composer.doc,
        image   = this.state(composer),
        textNode,
        i,
        parent;

    if (image) {
      // Image already selected, set the caret before it and delete it
      composer.selection.setBefore(image);
      parent = image.parentNode;
      parent.removeChild(image);

      // and it's parent <a> too if it hasn't got any other relevant child nodes
      wysihtml5.dom.removeEmptyTextNodes(parent);
      if (parent.nodeName === "A" && !parent.firstChild) {
        composer.selection.setAfter(parent);
        parent.parentNode.removeChild(parent);
      }

      // firefox and ie sometimes don't remove the image handles, even though the image got removed
      wysihtml5.quirks.redraw(composer.element);
      return;
    }

    image = doc.createElement('IMG');

    for (i in value) $(image).attr (i, value[i]);

    composer.selection.insertNode(image);
    if (wysihtml5.browser.hasProblemsSettingCaretAfterImg()) {
      textNode = doc.createTextNode(wysihtml5.INVISIBLE_SPACE);
      composer.selection.insertNode(textNode);
      composer.selection.setAfter(textNode);
    } else {
      composer.selection.setAfter(image);
    }    
  }

  $.fn.koiEditor = function () { this.wysihtml5 () };
}
(jQuery);
