// NOTE: Potentially transitioning from .content-* to .normal-*
// For now both classes are being used during the transition preiod.

// LISTS
// Normalising bullets and numbered lists

@mixin normal-lists($list-type: false) {
  margin-left: 2em;
  margin-bottom: $small-unit;

  // Remove nested margins
  ul,
  ol {
    margin-bottom: 0;
  }

  // Set list type based on value passed in
  @if ($list-type == ul) {
    li {
      list-style: disc;
    }
  } @else if ($list-type == ol) {
    li {
      list-style: decimal;
    }
  }

  // Support for type attributes
  // http://stackoverflow.com/questions/27104096/css-selector-type-var-not-selecting-lower-alpha-versus-upper-alpha
  &[type="1"] > li {
    list-style: decimal;
  }

  &[type="a"] > li {
    list-style: lower-alpha;
  }

  &[type="aup"] > li {
    list-style: upper-alpha;
  }

  &[type="i"] > li {
    list-style: lower-roman;
  }

  &[type="iup"] > li {
    list-style: upper-roman;
  }
}

.content-lists ul,
ul.content-lists {
  @include normal-lists(ul);
}

.content-lists ol,
ol.content-lists {
  @include normal-lists(ol);
}

// NORMAL SPACING

@mixin normal-spacing {
  p {
    margin-top: $xx-small-unit;
    margin-bottom: $xx-small-unit;
    @include flush-children;
  }

  h1 {
    margin-top: $default-unit;
    margin-bottom: $default-unit;
    @include flush-children;

    @include media-query($breakpoint-typography) {
      margin-top: $small-unit;
      margin-bottom: $small-unit;
    }
  }

  h2 {
    margin-top: $xx-small-unit;
    margin-bottom: $xx-small-unit;
    @include flush-children;

    @include media-query($breakpoint-typography) {
      margin-top: $xxx-small-unit;
      margin-bottom: $xxx-small-unit;
    }
  }

  h3 {
    margin-top: $xx-small-unit;
    margin-bottom: $xx-small-unit;
    @include flush-children;

    @include media-query($breakpoint-typography) {
      margin-top: $xxx-small-unit;
      margin-bottom: $xxx-small-unit;
    }
  }

  h4 {
    margin-top: $xx-small-unit;
    margin-bottom: $xx-small-unit;
    @include flush-children;

    @include media-query($breakpoint-typography) {
      margin-top: $xxx-small-unit;
      margin-bottom: $xxx-small-unit;
    }
  }

  .buttons {
    margin-top: $xx-small-unit;
    margin-bottom: $xx-small-unit;
    @include flush-children;
  }
}

.normal-spacing,
.content-spacing {
  @include normal-spacing;
}

// FONT SIZE INCREASER

@mixin normal-sizing {
  @include media-query($breakpoint-medium, "min") {
    font-size: $large-font-size;
  }
}

// NORMALISE HEADINGS

@mixin normal-headings {
  h1 {
    @include heading-one;
  }

  h2 {
    @include heading-two;
  }

  h3 {
    @include heading-three;
  }

  h4 {
    @include heading-four;
  }

  h5 {
    @include heading-five;
  }

  h6 {
    @include heading-six;
  }
}

.normal-headings,
.content-headings {
  @include normal-headings;
}

// EVERYTHING ALL TOGETHER IN ONE CLASS

.content, trix-editor {
  @include normal-spacing;
  // @include normal-sizing;
  @include normal-headings;

  ul {
    @include normal-lists(ul);
  }

  ol {
    @include normal-lists(ol);
  }

  img {
    border-radius: $border-radius;
  }

  // koi-inserted images working resposively
  img[style*="height"] {
    height: auto !important;
  }

  // Images with captions
  figure {
    position: relative;

    img {
      position: relative;
      z-index: 1;
      display: block;
      margin: 0 auto;
      width: 100%;
    }

    // image figcaptions
    // inheriting some styles from fotorama_custom.css
    img + figcaption,
    picture + figcaption {
      padding: $panel-padding;
      border-bottom: 1px solid $divider-color;
    }
  }

  blockquote {
    padding-left: $default-unit;
    border-left: 6px solid $grey;
    margin: $xx-small-unit 0 $default-unit;
    @include font($italic-font);
  }

  // captions on text figures
  p + figcaption,
  blockquote + figcaption {
    display: block;
    margin: $xx-small-unit 0 $default-unit;
    @include flush-children;
    font-size: $base-font-size;
  }
}
